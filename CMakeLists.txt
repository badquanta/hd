cmake_minimum_required(VERSION 3.18)
project(hd VERSION 0.1.0.0 DESCRIPTION "maybe a game, maybe a library.. who knows." HOMEPAGE_URL "https://github.com/BadQuanta/hd" LANGUAGES CXX)
list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake/sdl2)
set(CMAKE_CXX_STANDARD 17)
option(HD_DEBUG_EVENT "Enable event println debugging." ON)
option(HD_COMPILE_COMMON_HPP "Enable precompiling of some hpp files" ON)
if(HD_DEBUG_EVENT)
set(HD_DEBUG_EVENT_VALUE "true")
else()
set(HD_DEBUG_EVENT_VALUE "false")
endif()
#set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
#set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
#set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
if(${CMAKE_BUILD_TYPE} STREQUAL "Debug")
  set(HD_DEBUG_BUILD 1)
else()
  set(HD_DEBUG_BUILD 0)
endif()


enable_testing()

find_package(SDL2 REQUIRED)
find_package(SDL2_image REQUIRED)
find_package(SDL2_gfx REQUIRED)
find_package(SDL2_ttf REQUIRED)
find_package(SDL2_mixer REQUIRED)
find_package(SDL2_net REQUIRED)
set(OpenGL_GL_PREFERENCE, GLVND)
find_package(OpenGL REQUIRED)
find_package(GLEW REQUIRED)
find_package(Boost 1.74 REQUIRED COMPONENTS program_options)
#             date_time filesystem iostreams)
add_subdirectory(include/hd)
add_subdirectory(src/hd)
option(HD_BUILD_BIN "Build binary demos / utilities" ON)
if(HD_BUILD_BIN)
  add_subdirectory(bin)
endif()
add_subdirectory(docs)
add_subdirectory(assets)
option(HD_BUILD_TESTS "Build tests" OFF)
if(HD_BUILD_TESTS)
add_subdirectory(test)
endif()
set(CPACK_PACKAGE_CONTACT "badquanta@gmail.com")
set(CPACK_DEBIAN_PACKAGE_DEPENDS libsdl2-2.0-0 libsdl2-gfx-1.0-0 libsdl2-image-2.0-0 libsdl2-mixer-2.0-0 libsdl2-net-2.0-0;libsdl2-ttf-2.0-0)
set(CPACK_DEBIAN_DEBUGINFO_PACKAGE ON)
set(CPACK_DEBIAN_PACKAGE_LICENSE "gpl-3.0")
set(CPACK_GENERATOR DEB RPM TGZ ZIP)
set(CPACK_RESOURCE_FILE_LICENSE ${PROJECT_SOURCE_DIR}/lgpl-3.0.md)
set(CPACK_SOURCE_GENERATOR DEB RPM TGZ ZIP)
list(APPEND CPACK_SOURCE_IGNORE_FILES .*/build/.*)
include(GNUInstallDirs)
install(TARGETS hd LIBRARY DESTINATION lib )

install(DIRECTORY ${PROJECT_SOURCE_DIR}/include/ ${PROJECT_BINARY_DIR}/include/ DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
        FILES_MATCHING PATTERN "*.hpp")
include(CPack)